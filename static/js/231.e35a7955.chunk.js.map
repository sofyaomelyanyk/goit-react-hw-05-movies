{"version":3,"file":"static/js/231.e35a7955.chunk.js","mappings":"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","sources":["services/detalilMovieApi.js","components/Button/Button.styled.js","components/Button/Button.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx","hooks/useFetchId.js"],"sourcesContent":["const KEY = '762b5545ec681e46f6d7d0ae5d3e3243';\n\nexport const getDetailMovie = async id => {\n  const resp = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`\n  );\n  const data = resp.json();\n  return data;\n};\n\n","import styled from 'styled-components';\n\nexport const ButtonBack = styled.button`\n  display: inline-block;\n  box-sizing: border-box;\n  padding: 0 25px;\n  margin-left: 30px;\n  margin-bottom: 40px;\n  outline: none;\n  border: 1px solid #fff;\n  border-radius: 50px;\n  height: 46px;\n  line-height: 46px;\n  font-size: 14px;\n  font-weight: 600;\n  text-decoration: none;\n  color: #fff;\n  background-color: #679bd5;\n  box-shadow: 0 4px 6px rgb(65 132 144 / 10%), 0 1px 3px rgb(0 0 0 / 8%);\n  cursor: pointer;\n\n  :hover {\n    background-color: #2d5684;\n  }\n`;\n","import { ButtonBack } from './Button.styled';\n\nexport const Button = ({ onClick }) => {\n  return (\n    <ButtonBack onClick={onClick} type=\"button\">\n      Go back\n    </ButtonBack>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n\n  &.active {\n    color: red;\n  }\n`;\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  padding: 0 30px;\n  margin-bottom: 40px;\n`;\n\nexport const MainText = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nexport const TextContainer = styled.p`\n  line-height: 1.3;\n  width: 400px;\n`;\n\nexport const Span = styled.span`\n  font-weight: 400;\n`;\n\nexport const ListItem = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const DetailWrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const ListDetail = styled.ul`\n  list-style: none;\n  margin-left: 30px;\n  padding: 0;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n`;\n\nexport const ItemDetail = styled.li`\n  font-size: 20px;\n`;\n","import { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport {\n  CardWrapper,\n  MainText,\n  Span,\n  ListItem,\n  TextContainer,\n  ListDetail,\n  ItemDetail,\n  Link,\n  DetailWrapper,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({\n  movie: { title, poster_path, overview, genres, vote_average },\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(location);\n\n  const handleLoaded = () => {\n    setIsLoaded(true);\n  };\n  const startUrl = 'https://image.tmdb.org/t/p/w500/';\n  const userScore = Math.round(vote_average * 10);\n\n  return (\n    <>\n      <Button onClick={() => navigate(location.state?.from ?? '/')} />\n      <CardWrapper>\n        <img\n          src={`${startUrl}${poster_path}`}\n          width=\"300\"\n          height=\"450\"\n          alt=\"\"\n          onLoad={handleLoaded}\n          style={{ display: isLoaded ? 'block' : 'none' }}\n        />\n        {!isLoaded && <Loader />}\n        <div>\n          <h1>{title}</h1>\n          <MainText>\n            User score: <Span>{userScore}%</Span>\n          </MainText>\n          <MainText>Overview</MainText>\n          <TextContainer>{overview}</TextContainer>\n          <MainText>Genres</MainText>\n          <ListItem>\n            {genres.map(({ id, name }) => {\n              return <li key={id}>{name}</li>;\n            })}\n          </ListItem>\n        </div>\n      </CardWrapper>\n      <DetailWrapper>\n        <ListDetail>\n          <ItemDetail>\n            <Link to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n          </ItemDetail>\n          <ItemDetail>\n            <Link to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </ItemDetail>\n        </ListDetail>\n      </DetailWrapper>\n    </>\n  );\n};\n","import { useFetchId } from 'hooks/useFetchId';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Outlet } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { Suspense } from 'react';\n\nexport const MovieDetails = () => {\n  const { movie, error, isLoading } = useFetchId();\n  const message = 'Sorry, server error';\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <h2>{message}</h2>}\n      {movie && <MovieCard movie={movie} />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n","import { getDetailMovie } from 'services/detalilMovieApi';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nexport const useFetchId = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        const data = await getDetailMovie(movieId);\n        setIsLoading(true);\n        setMovie(data);\n      } catch {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovie();\n  }, [movieId]);\n\n  return { movie, error, isLoading };\n};\n"],"names":["getDetailMovie","id","fetch","resp","data","json","ButtonBack","styled","Button","onClick","type","Link","NavLink","CardWrapper","MainText","TextContainer","Span","ListItem","DetailWrapper","ListDetail","ItemDetail","MovieCard","movie","title","poster_path","overview","genres","vote_average","useState","isLoaded","setIsLoaded","navigate","useNavigate","location","useLocation","console","log","userScore","Math","round","state","from","src","width","height","alt","onLoad","style","display","Loader","map","name","to","MovieDetails","setMovie","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","getMovie","useFetchId","Suspense","fallback"],"sourceRoot":""}
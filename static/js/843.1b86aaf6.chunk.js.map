{"version":3,"file":"static/js/843.1b86aaf6.chunk.js","mappings":"sOAEaA,EAAe,mCAAG,WAAOC,GAAP,yFACVC,MAAM,qDAAD,OAHd,mCAGc,kBAC4CD,IAFvC,cACvBE,EADuB,OAIvBC,EAAOD,EAAKE,OAJW,kBAKtBD,GALsB,2CAAH,sD,sDCAfE,EAAOC,EAAAA,GAAAA,KAAH,mNAYJC,EAAYD,EAAAA,GAAAA,MAAH,saAiBTE,EAAaF,EAAAA,GAAAA,OAAH,8fAwBVG,EAAWH,EAAAA,GAAAA,GAAH,0G,SChDRI,EAAa,WACxB,MCJkC,WAClC,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,WAAS,GAAnC,eAAOM,EAAP,KAAcC,EAAd,KACA,GAAkCP,EAAAA,EAAAA,WAAS,GAA3C,eAAOQ,EAAP,KAAkBC,EAAlB,KAEMC,EAAcN,EAAaO,IAAI,aAuBrC,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,6GAEuBxB,EAAgBsB,GAFvC,OAEUlB,EAFV,OAGIiB,GAAa,GACbP,EAAUV,EAAKqB,SAJnB,gDAMIN,GAAS,GANb,yBAQIE,GAAa,GARjB,6EAHc,sBACTC,GADS,mCAcdI,EACD,GAAE,CAACJ,IAEG,CAAET,OAAAA,EAAQK,MAAAA,EAAOE,UAAAA,EAAWO,SArBlB,SAAA1B,GACfgB,EAAgB,CAAEW,UAAW3B,GAC9B,EAoBF,CD1BgD4B,GAAvChB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,MAAOE,EAAvB,EAAuBA,UAAWO,EAAlC,EAAkCA,SAGlC,GAA0Bf,EAAAA,EAAAA,UAAS,IAAnC,eAAOX,EAAP,KAAc6B,EAAd,KAkBMC,EAAQ,WACZD,EAAS,GACV,EAED,OACE,iCACE,UAACxB,EAAD,CAAMqB,SAlBW,SAAAK,GACnBA,EAAEC,iBAEmB,KAAjBhC,EAAMiC,QAKVP,EAAS1B,GACT8B,KALEI,MAAM,wBAMT,EAQG,WACE,SAAC3B,EAAD,CACE4B,KAAK,OACLC,MAAOpC,EACPqC,KAAK,YACLC,aAAa,MACbC,WAAS,EACTC,SA7Ba,SAAAT,GACnBF,EAASE,EAAEU,cAAcL,MAAMM,cAChC,KA6BK,SAAClC,EAAD,CAAY2B,KAAK,SAAjB,uBAEDhB,IAAa,SAACwB,EAAA,EAAD,IACb1B,IAAS,wBAtCE,oCAuCXL,IACC,SAACH,EAAD,WACE,SAACmC,EAAA,EAAD,CAAYhC,OAAQA,QAK7B,C","sources":["services/searchMoviesApi.js","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx","hooks/useFetchSearchMovies.js"],"sourcesContent":["const KEY = '762b5545ec681e46f6d7d0ae5d3e3243';\n\nexport const getSearchMovies = async (query) => {\n  const resp = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`\n  );\n  const data = resp.json();\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-left: 30px;\n  display: flex;\n  align-items: stretch;\n  gap: 10px;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  width: 200px;\n  height: calc(2.25rem + 2px);\n  padding: 0.375rem 0.75rem;\n  font-family: inherit;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #bdbdbd;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n`;\n\nexport const FormButton = styled.button`\n  display: inline-block;\n  box-sizing: border-box;\n  padding: 0 25px;\n  margin-left: 30px;\n  margin-bottom: 40px;\n  outline: none;\n  border: 1px solid #fff;\n  border-radius: 50px;\n  height: 46px;\n  line-height: 46px;\n  font-size: 14px;\n  font-weight: 600;\n  text-decoration: none;\n  color: #fff;\n  background-color: #679bd5;\n  box-shadow: 0 4px 6px rgb(65 132 144 / 10%), 0 1px 3px rgb(0 0 0 / 8%);\n  cursor: pointer;\n\n  :hover {\n    background-color: #2d5684;\n  }\n`;\n\nexport const ListItem = styled.ul`\n \n  list-style: none;\n  display: flex;\n  gap: 5px;\n  flex-direction: column;\n`;\n\n","\nimport { useFetchSearchMovies } from 'hooks/useFetchSearchMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useState } from 'react';\nimport { Form, FormInput, FormButton, ListItem } from './MoviesPage.styled';\n\nexport const MoviesPage = () => {\n  const { movies, error, isLoading, onSubmit } = useFetchSearchMovies();\n  const message = 'Nothing found for your request!';\n\n  const [query, setQuery] = useState('');\n\n  const onChangeName = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      alert('Please, fill the form');\n      return;\n    }\n\n    onSubmit(query);\n    reset();\n  };\n\n  const reset = () => {\n    setQuery('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={onSubmitForm}>\n        <FormInput\n          type=\"text\"\n          value={query}\n          name=\"queryname\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={onChangeName}\n        />\n        <FormButton type=\"submit\">Search</FormButton>\n      </Form>\n      {isLoading && <Loader />}\n      {error && <h3>{message}</h3>}\n      {movies && (\n        <ListItem>\n          <MoviesList movies={movies} />\n        </ListItem>\n      )}\n    </>\n  );\n};\n\n","import { getSearchMovies } from 'services/searchMoviesApi';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nexport const useFetchSearchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const searchQuery = searchParams.get('queryname');\n\n  const onSubmit = query => {\n    setSearchParams({ queryname: query });\n  };\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    async function getMovie() {\n      try {\n        const data = await getSearchMovies(searchQuery);\n        setIsLoading(true);\n        setMovies(data.results);\n      } catch {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovie();\n  }, [searchQuery]);\n\n  return { movies, error, isLoading, onSubmit };\n};\n"],"names":["getSearchMovies","query","fetch","resp","data","json","Form","styled","FormInput","FormButton","ListItem","MoviesPage","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","error","setError","isLoading","setIsLoading","searchQuery","get","useEffect","results","getMovie","onSubmit","queryname","useFetchSearchMovies","setQuery","reset","e","preventDefault","trim","alert","type","value","name","autoComplete","autoFocus","onChange","currentTarget","toLowerCase","Loader","MoviesList"],"sourceRoot":""}